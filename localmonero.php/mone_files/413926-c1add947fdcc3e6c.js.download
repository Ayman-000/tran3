"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[413926],{413926:function(e,t,s){s.d(t,{q:function(){return u}});var i,n,o=null;"undefined"!=typeof WebSocket?o=WebSocket:"undefined"!=typeof MozWebSocket?o=MozWebSocket:void 0!==s.g?o=s.g.WebSocket||s.g.MozWebSocket:"undefined"!=typeof window?o=window.WebSocket||window.MozWebSocket:"undefined"!=typeof self&&(o=self.WebSocket||self.MozWebSocket);var r=o;class c{listeners=new Map;on(e,t){return this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push(t)-1}once(e,t){let s=this.on(e,(...i)=>{this.off(e,s),t(...i)})}off(e,t){let s=this.listeners.get(e);s&&!(s.length<t+1)&&(s[t]=null)}allOff(e){this.listeners.delete(e)}fire(e,...t){let s=this.listeners.get(e);if(s&&s.length)for(let e of s)e&&e(...t)}}var h=s(348764).Buffer;(i=n||(n={})).OPEN="open",i.CLOSE="close",i.CONNECTED="connected",i.DISCONNECTED="disconnected",i.RECONNECTING="reconnecting",i.ERROR="error",i.MESSAGE="message";class u extends c{static DEFAULT_OPTIONS={reconnect:!0,verbose:!1};options;endpoint;requests=new Map;subscriptions=new Map;connected=!1;connectedTimeout;reconnectionTimeout;incompleteMessage="";ws;constructor(e,t={}){super(),this.endpoint=e,this.options=Object.assign(u.DEFAULT_OPTIONS,t),this.connect(),this.verbose&&Object.values(n).forEach(e=>{this.on(e,t=>t?console.debug(`ElectrumWS - ${e.toUpperCase()}:`,t):console.debug(`ElectrumWS - ${e.toUpperCase()}`))})}get verbose(){return this.options.verbose}async batchRequest(...e){let t;this.connected||await new Promise(e=>this.once(n.CONNECTED,()=>e(!0)));do t=Math.ceil(1e5*Math.random());while(this.requests.has(t));let s=e.map(e=>({jsonrpc:"2.0",method:e.method,params:e.params,id:t++})),i=s.map(e=>this.createRequestPromise(e.id,e.method));return s.forEach(e=>this.ws.send(a(e))),Promise.all(i)}async request(e,...t){let s;do s=Math.ceil(1e5*Math.random());while(this.requests.has(s));this.connected||await new Promise(e=>this.once(n.CONNECTED,()=>e(!0)));let i=this.createRequestPromise(s,e);return this.verbose&&console.debug("ElectrumWS SEND:",e,...t),this.ws.send(a({jsonrpc:"2.0",method:e,params:t,id:s})),i}createRequestPromise(e,t){return new Promise((s,i)=>{let n=setTimeout(()=>{this.requests.delete(e),i(Error(`ElectrumWS request timeout. request ID: ${e} (${t})`))},1e4);this.requests.set(e,{resolve:s,reject:i,method:t,timeout:n})})}async subscribe(e,t,...s){let i=`${e}${"string"==typeof s[0]?`-${s[0]}`:""}`;this.subscriptions.set(i,t),this.connected&&t(...s,await this.request(`${e}.subscribe`,...s))}async unsubscribe(e,...t){let s=`${e}${"string"==typeof t[0]?`-${t[0]}`:""}`,i=this.subscriptions.delete(s);if(i)return this.request(`${e}.unsubscribe`,...t)}isConnected(){return this.connected}async close(e){for(let[t,s]of(this.options.reconnect=!1,this.requests))clearTimeout(s.timeout),this.requests.delete(t),this.verbose&&console.debug("Rejecting pending request:",s.method),s.reject(Error(e));if(clearTimeout(this.reconnectionTimeout),this.ws.readyState===r.CONNECTING||this.ws.readyState===r.OPEN){let t=new Promise(e=>this.once(n.CLOSE,()=>e(!0)));return this.ws.close(1e3,e),t}return!0}connect(){let e=this.endpoint;this.options.token&&(e=`${e}?token=${this.options.token}`),this.ws=new r(e),this.ws.binaryType="arraybuffer",this.ws.addEventListener("open",this.onOpen.bind(this)),this.ws.addEventListener("message",this.onMessage.bind(this)),this.ws.addEventListener("error",this.onError.bind(this)),this.ws.addEventListener("close",this.onClose.bind(this))}onOpen(){this.fire(n.OPEN),this.connectedTimeout=setTimeout(()=>{for(let[e,t]of(this.connected=!0,this.fire(n.CONNECTED),this.subscriptions)){let s=e.split("-"),i=s.shift();if(!i){this.verbose&&console.warn("Cannot resubscribe, no method in subscription key:",e);continue}this.subscribe(i,t,...s).catch(e=>{(this.ws.readyState===r.CONNECTING||this.ws.readyState===r.OPEN)&&this.ws.close(1e3,e.message)})}},500)}onMessage(e){let t="string"==typeof e.data?e.data:function(e){Array.isArray(e)&&(e=h.concat(e));let t=new TextDecoder("utf-8");return t.decode(e)}(e.data),s=RegExp("\r|\n| ","g"),i=t.split(s).filter(e=>e.length>0);for(let e of i){let t=this.parseLine(e);if(t){if(this.fire(n.MESSAGE,t),"object"!=typeof t){this.verbose&&console.debug("received a non-JSON response:",t);continue}if("id"in t&&this.requests.has(t.id)){let e=this.requests.get(t.id);clearTimeout(e.timeout),this.requests.delete(t.id),"result"in t?e.resolve(t.result):t.error?e.reject(Error("string"==typeof t.error?t.error:t.error.message)):e.reject(Error("No result"))}if("method"in t&&t.method.endsWith("subscribe")){let e=t.method.replace(".subscribe",""),s=t.params||[],i=`${e}${"string"==typeof s[0]?`-${s[0]}`:""}`;if(this.subscriptions.has(i)){let e=this.subscriptions.get(i);e(...s)}}}}}parseLine(e){try{let t=JSON.parse(e);if("object"==typeof t)return this.incompleteMessage="",t}catch(e){}return this.incompleteMessage&&!e.includes(this.incompleteMessage)?this.parseLine(`${this.incompleteMessage}${e}`):(this.verbose&&console.debug(`Failed to parse JSON, retrying together with next message: "${e}"`),this.incompleteMessage=e,!1)}onError(e){e.error&&(this.verbose&&console.error("ElectrumWS ERROR:",e.error),this.fire(n.ERROR,e.error))}onClose(e){this.fire(n.CLOSE,e),this.connected?this.fire(n.DISCONNECTED):clearTimeout(this.connectedTimeout),this.options.reconnect&&this.connected&&(this.fire(n.RECONNECTING),this.reconnectionTimeout=setTimeout(()=>this.connect(),1e3)),this.connected=!1}}function a(e){return function(e){let t=new TextEncoder;return t.encode(e)}(JSON.stringify(e)+"\n")}}}]);